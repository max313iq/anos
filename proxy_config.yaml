model_list:
  - model_name: "gpt-5-codex"
    litellm_params:
      model: "azure/gpt-5-codex"
      api_base: "https://ai-uea1sub1618ai763855450353.cognitiveservices.azure.com/"
      api_key: "81pOESDtLwIIHjfSS7RytcJ2yUd6eF1ksZsgDtW737fh0J9giZ72JQQJ99BJACfhMk5XJ3w3AAAAACOGYbD2"
      api_version: "2025-04-01-preview"

litellm_settings:
  drop_params: true
  set_verbose: false  # Disable verbose logging for better performance
  cache: true  # Enable caching
  cache_params:
    type: "redis"
    host: "${REDIS_HOST:redis.railway.internal}"
    port: "${REDIS_PORT:6379}"
    password: "${REDIS_PASSWORD:}"
    ttl: 600  # Cache for 10 minutes
  
  # Enterprise Features (Free for Development/Testing)
  # Note: Prometheus requires prometheus_client package
  # callbacks: ["prometheus"]  # Uncomment if prometheus_client is installed
  # success_callback: ["prometheus"]
  # failure_callback: ["prometheus"]

general_settings:
  default_model: "gpt-5-codex"
  store_model_in_db: true
  store_prompts_in_spend_logs: true
  database_url: "${DATABASE_URL:postgresql://postgres:ewJimjnmajcUjpxXDnjEUuOJoWEqiliE@postgres.railway.internal:5432/railway}"
  database_connection_pool_limit: 10  # Optimize connection pool
  database_connection_timeout: 30
  
  # Enterprise Guardrails (Free for Development/Testing)
  guardrails:
    # Content Moderation - Blocks inappropriate content
    - banned_keywords:
        enabled: true
        keywords: 
          - "spam"
          - "abuse"
          - "hack"
          - "exploit"
        match_case: false
    
    # Block specific users if needed
    - blocked_user_list:
        enabled: false  # Enable when needed
        blocked_users: []
  
  # Enterprise Monitoring (requires prometheus_client package)
  # prometheus:
  #   enabled: true
  #   port: 9090
  
  # Master key for admin access
  master_key: "${LITELLM_MASTER_KEY:sk-1234}"
